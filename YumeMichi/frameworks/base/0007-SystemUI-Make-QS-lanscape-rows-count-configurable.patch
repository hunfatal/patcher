From 1f754c1625e152c14ffcee2adde5ce928d7b4db9 Mon Sep 17 00:00:00 2001
From: Vol Zhdanov <wight554@gmail.com>
Date: Wed, 29 Aug 2018 16:29:35 +0000
Subject: [PATCH 07/20] SystemUI: Make QS lanscape rows count configurable

* based on ezio84's and omnirom's code

Change-Id: I0e57eaa69c4a8f48bdb4cdc117f57f05c6a58dbe
---
 core/java/android/provider/Settings.java           | 12 ++++++++
 packages/SystemUI/res/menu/qs_customize_menu.xml   | 17 ++++++++++
 packages/SystemUI/res/values/custom_strings.xml    |  1 +
 .../com/android/systemui/qs/PagedTileLayout.java   | 16 ++++++++--
 .../systemui/qs/customize/QSCustomizer.java        | 36 ++++++++++++++++++++++
 5 files changed, 79 insertions(+), 3 deletions(-)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index f0e3738..2e65a55 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -4123,6 +4123,15 @@ public final class Settings {
                 ANY_INTEGER_VALIDATOR;
 
         /**
+         * @hide
+         */
+        public static final String OMNI_QS_LAYOUT_ROWS_LANDSCAPE = "qs_layout_rows_landscape";
+
+        /** @hide */
+        private static final Validator OMNI_QS_LAYOUT_ROWS_LANDSCAPE_VALIDATOR =
+                ANY_INTEGER_VALIDATOR;
+
+        /**
          * IMPORTANT: If you add a new public settings you also have to add it to
          * PUBLIC_SETTINGS below. If the new setting is hidden you have to add
          * it to PRIVATE_SETTINGS below. Also add a validator that can validate
@@ -4201,6 +4210,7 @@ public final class Settings {
             OMNI_QS_LAYOUT_COLUMNS,
             OMNI_QS_TILE_TITLE_VISIBILITY,
             OMNI_QS_LAYOUT_ROWS,
+            OMNI_QS_LAYOUT_ROWS_LANDSCAPE,
         };
 
         /**
@@ -4319,6 +4329,7 @@ public final class Settings {
             PRIVATE_SETTINGS.add(OMNI_QS_LAYOUT_COLUMNS);
             PRIVATE_SETTINGS.add(OMNI_QS_TILE_TITLE_VISIBILITY);
             PRIVATE_SETTINGS.add(OMNI_QS_LAYOUT_ROWS);
+            PRIVATE_SETTINGS.add(OMNI_QS_LAYOUT_ROWS_LANDSCAPE);
         }
 
         /**
@@ -4412,6 +4423,7 @@ public final class Settings {
             VALIDATORS.put(OMNI_QS_LAYOUT_COLUMNS, OMNI_QS_LAYOUT_COLUMNS_VALIDATOR);
             VALIDATORS.put(OMNI_QS_TILE_TITLE_VISIBILITY, OMNI_QS_TILE_TITLE_VISIBILITY_VALIDATOR);
             VALIDATORS.put(OMNI_QS_LAYOUT_ROWS, OMNI_QS_LAYOUT_ROWS_VALIDATOR);
+            VALIDATORS.put(OMNI_QS_LAYOUT_ROWS_LANDSCAPE, OMNI_QS_LAYOUT_ROWS_LANDSCAPE_VALIDATOR);
         }
 
         /**
diff --git a/packages/SystemUI/res/menu/qs_customize_menu.xml b/packages/SystemUI/res/menu/qs_customize_menu.xml
index 9d52b6f..37364a4 100644
--- a/packages/SystemUI/res/menu/qs_customize_menu.xml
+++ b/packages/SystemUI/res/menu/qs_customize_menu.xml
@@ -72,6 +72,23 @@ limitations under the License.
                       android:checkable="true" />
             </menu>
         </item>
+        <item android:id="@+id/menu_item_rows_landscape"
+              android:title="@string/qs_menu_item_rows_landscape">
+            <menu>
+                <item android:id="@+id/menu_item_rows_landscape_one"
+                      android:title="@string/qs_menu_item_rows_one"
+                      android:checkable="true" />
+                <item android:id="@+id/menu_item_rows_landscape_two"
+                      android:title="@string/qs_menu_item_rows_two"
+                      android:checkable="true" />
+                <item android:id="@+id/menu_item_rows_landscape_three"
+                      android:title="@string/qs_menu_item_rows_three"
+                      android:checkable="true" />
+                <item android:id="@+id/menu_item_rows_landscape_four"
+                      android:title="@string/qs_menu_item_rows_four"
+                      android:checkable="true" />
+            </menu>
+        </item>
         <item android:id="@+id/menu_item_titles"
               android:title="@string/qs_menu_item_titles"
               android:checkable="true" />
diff --git a/packages/SystemUI/res/values/custom_strings.xml b/packages/SystemUI/res/values/custom_strings.xml
index ab6fa8a..c9bb7a2 100644
--- a/packages/SystemUI/res/values/custom_strings.xml
+++ b/packages/SystemUI/res/values/custom_strings.xml
@@ -32,6 +32,7 @@
     <string name="qs_menu_item_reset">Reset</string>
     <string name="qs_menu_item_titles">Show labels</string>
     <string name="qs_menu_item_rows">Rows</string>
+    <string name="qs_menu_item_rows_landscape">Rows landscape</string>
     <string name="qs_menu_item_rows_one">1</string>
     <string name="qs_menu_item_rows_two">2</string>
     <string name="qs_menu_item_rows_three">3</string>
diff --git a/packages/SystemUI/src/com/android/systemui/qs/PagedTileLayout.java b/packages/SystemUI/src/com/android/systemui/qs/PagedTileLayout.java
index cbb1420..5590400 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/PagedTileLayout.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/PagedTileLayout.java
@@ -1,5 +1,6 @@
 package com.android.systemui.qs;
 
+import android.content.ContentResolver;
 import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
 import android.animation.AnimatorSet;
@@ -384,10 +385,19 @@ public class PagedTileLayout extends ViewPager implements QSTileLayout {
 
         private int getRows() {
             final Resources res = getContext().getResources();
+            final ContentResolver resolver = mContext.getContentResolver();
+
             int defaultRows = Math.max(1, res.getInteger(R.integer.quick_settings_num_rows));
-            return Settings.System.getIntForUser(
-                    mContext.getContentResolver(), Settings.System.OMNI_QS_LAYOUT_ROWS, defaultRows,
-                    UserHandle.USER_CURRENT);
+
+            if (res.getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {
+                return Settings.System.getIntForUser(resolver,
+                        Settings.System.OMNI_QS_LAYOUT_ROWS, defaultRows,
+                        UserHandle.USER_CURRENT);
+            }
+
+            return Settings.System.getIntForUser(resolver,
+                        Settings.System.OMNI_QS_LAYOUT_ROWS_LANDSCAPE, defaultRows,
+                        UserHandle.USER_CURRENT);
         }
 
         public boolean isFull() {
diff --git a/packages/SystemUI/src/com/android/systemui/qs/customize/QSCustomizer.java b/packages/SystemUI/src/com/android/systemui/qs/customize/QSCustomizer.java
index 9727c39..e99841a 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/customize/QSCustomizer.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/customize/QSCustomizer.java
@@ -88,6 +88,7 @@ public class QSCustomizer extends LinearLayout implements OnMenuItemClickListene
     private Menu mColumnsSubMenu;
     private Menu mColumnsLandscapeSubMenu;
     private Menu mRowsSubMenu;
+    private Menu mRowsLandscapeSubMenu;
 
     public QSCustomizer(Context context, AttributeSet attrs) {
         super(new ContextThemeWrapper(context, R.style.edit_theme), attrs);
@@ -120,6 +121,10 @@ public class QSCustomizer extends LinearLayout implements OnMenuItemClickListene
         if (menuItemRows != null) {
             mRowsSubMenu = menuItemRows.getSubMenu();
         }
+        MenuItem menuItemRowsLand = mToolbar.getMenu().findItem(R.id.menu_item_rows_landscape);
+        if (menuItemRows != null) {
+            mRowsLandscapeSubMenu = menuItemRowsLand.getSubMenu();
+        }
 
         int qsTitlesValue = Settings.System.getIntForUser(mContext.getContentResolver(),
                 Settings.System.OMNI_QS_TILE_TITLE_VISIBILITY, 1,
@@ -237,6 +242,9 @@ public class QSCustomizer extends LinearLayout implements OnMenuItemClickListene
             if (mRowsSubMenu != null) {
                 mRowsSubMenu.close();
             }
+            if (mRowsLandscapeSubMenu != null) {
+                mRowsLandscapeSubMenu.close();
+            }
             mToolbar.dismissPopupMenus();
             setCustomizing(false);
             save();
@@ -330,6 +338,22 @@ public class QSCustomizer extends LinearLayout implements OnMenuItemClickListene
                 Settings.System.putIntForUser(mContext.getContentResolver(),
                         Settings.System.OMNI_QS_LAYOUT_ROWS, 4, UserHandle.USER_CURRENT);
                 break;
+            case R.id.menu_item_rows_landscape_one:
+                Settings.System.putIntForUser(mContext.getContentResolver(),
+                        Settings.System.OMNI_QS_LAYOUT_ROWS_LANDSCAPE, 1, UserHandle.USER_CURRENT);
+                break;
+            case R.id.menu_item_rows_landscape_two:
+                Settings.System.putIntForUser(mContext.getContentResolver(),
+                        Settings.System.OMNI_QS_LAYOUT_ROWS_LANDSCAPE, 2, UserHandle.USER_CURRENT);
+                break;
+            case R.id.menu_item_rows_landscape_three:
+                Settings.System.putIntForUser(mContext.getContentResolver(),
+                        Settings.System.OMNI_QS_LAYOUT_ROWS_LANDSCAPE, 3, UserHandle.USER_CURRENT);
+                break;
+            case R.id.menu_item_rows_landscape_four:
+                Settings.System.putIntForUser(mContext.getContentResolver(),
+                        Settings.System.OMNI_QS_LAYOUT_ROWS_LANDSCAPE, 4, UserHandle.USER_CURRENT);
+                break;
         }
         updateSettings();
         return false;
@@ -491,5 +515,17 @@ public class QSCustomizer extends LinearLayout implements OnMenuItemClickListene
         menuItemThree.setChecked(rows == 3);
         menuItemFour = mToolbar.getMenu().findItem(R.id.menu_item_rows_four);
         menuItemFour.setChecked(rows == 4);
+
+        int rowsLandscape = Settings.System.getIntForUser(
+                mContext.getContentResolver(), Settings.System.OMNI_QS_LAYOUT_ROWS_LANDSCAPE, defaultRows,
+                UserHandle.USER_CURRENT);
+        menuItemOne = mToolbar.getMenu().findItem(R.id.menu_item_rows_landscape_one);
+        menuItemOne.setChecked(rowsLandscape == 1);
+        menuItemTwo = mToolbar.getMenu().findItem(R.id.menu_item_rows_landscape_two);
+        menuItemTwo.setChecked(rowsLandscape == 2);
+        menuItemThree = mToolbar.getMenu().findItem(R.id.menu_item_rows_landscape_three);
+        menuItemThree.setChecked(rowsLandscape == 3);
+        menuItemFour = mToolbar.getMenu().findItem(R.id.menu_item_rows_landscape_four);
+        menuItemFour.setChecked(rowsLandscape == 4);
     }
 }
-- 
2.7.4

